#!/usr/bin/env ruby

# Usage: novac quota-snafu
# Summary: Lists all users who have exceeded their quota. Very similar to novac quota-report.

$:.unshift File.expand_path("../../share/novac/lib/rb", __FILE__)
require 'rubygems'
require 'novadb'
require 'quotas'
require 'projects'

# List of required libraries
required_libs = ['terminal-table']

# Try to load each of the libraries
# Fail if unable to and list what libs are needed
begin
  required_libs.each { |l| require l }
rescue LoadError
  puts "This script needs the following external libraries: "
  required_libs.each { |l| puts " * #{l}" }
  exit 1
end

# Ensure root or sudo is used for this command
if Process.euid != 0
  throw "Must run this script as root or sudo."
end

# Was a project specified?
if ARGV[0]
  project = ARGV[0]
else
  project = nil
end

# create quota object
quotas = Quotas.new

# Build a list of project quotas
p = Projects.new

# Get the quota for each project
# As well as resources used
quota = {}
resources_used = {}
to_report = {}

if project
  total_usage = {}
  p.projects.each do |project_id, project_name|
    if project_name == project
      total_usage[project_id] = quotas.calculate_used(project_id)
      to_report[project_id] = project_name
      quota[project_id] = quotas.project_quota(project_id)
    end
  end
else
  total_usage = quotas.all_projects_used
  p.projects.each do |project_id, project_name|
    to_report[project_id] = project_name
    quota[project_id] = quotas.project_quota(project_id)
  end
end

# Report quota usage
x = to_report.sort_by { |k,v| v }
x.each do |project_id, project_name|
  rows = []
  q = quota[project_id].sort_by { |k,v| k }
  q.each do |resource, limit|
    used = 0
    if total_usage[project_id].has_key?(resource)
      used = total_usage[project_id][resource]
    end
    #Catch 0 or unlimited quota users
    if limit.to_f > 0.0
      percent = ((used.to_f / limit.to_f) * 100).to_i
    else
      percent = 0
    end
    if percent > 100
      rows << [resource,used,limit,"#{percent} %"]
    end
  end
  next unless rows.any?
  table = Terminal::Table.new :title => project_name, :headings => ['Resource', 'Used', 'Limit',''], :rows => rows, :style => { :width => 80 }
  table.align_column(-1, :right)
  table.align_column(-2, :right)
  table.align_column(-3, :right)

  puts table
end
