#!/usr/bin/env ruby
# Usage: novac list-volumes
# Summary: List all volumes in both regions
# Help: This command shows the ID, Name, Project, Status, Attach, Instance, Mountpoint, Size, Host, and Region

$:.unshift File.expand_path("../../share/novac/lib/rb", __FILE__)
require 'rubygems'
require 'terminal-table'
require 'novadb2'
require 'helpers/projects'

# Ensure root or sudo is used for this command
if Process.euid != 0
  throw "Must run this script as root or use sudo."
end

# Get a list of clouds
novadb = NovaDB2.new
projects = Projects.new.projects

# Get the OpenStack Query Library
os_release = novadb.get_openstack_release
require "openstack/#{os_release}"
openstack = Object.const_get(os_release.capitalize).new

rows = {}

master = novadb.master_cloud
novadb.regions.each do |region, creds|
  begin
    volumes = openstack.volumes_query(region)
    volumes.each do |row|

      # Shorten the Instance ID
      volume_id_short = row[:id].split('-')[0]

      # Shorten the hostname
      if row[:host]
        host = row[:host].split('.')[0]
      else
        host = ''
      end

      # Get the project name
      project = projects[row[:project_id]]

      # Build the output row
      if not rows.has_key?(project)
        rows[project] = []
      end
      rows[project] << [volume_id_short, row[:volume], project, row[:status], row[:attach_status], row[:instance], row[:mountpoint], row[:size], host, region]
    end
  end
end

# Print report
headings = ['ID', 'Name', 'Project', 'Status', 'Attach Status', 'Instance', 'Mountpoint', 'Size (GB)', 'Host', 'Region']

# Sort based on project
r = []
rows.keys.sort!.each do |project|
  rows[project].each do |row|
    r << row
  end
end

table = Terminal::Table.new :headings => headings, :rows => r
puts table

