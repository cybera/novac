#!/usr/bin/env ruby
# Usage: novac list-images
# Summary: List all images and snapshots
# Help: Lists all images and snapshots on DAIR

$:.unshift File.expand_path("../../share/novac/lib/rb", __FILE__)
require 'rubygems'
require 'terminal-table'
require 'novadb2'

# Ensure root or sudo is used for this command
if Process.euid != 0
  throw "Must run this script as root or use sudo."
end

novadb = NovaDB2.instance

# Get the OpenStack Query Library
os_release = novadb.get_openstack_release
require "openstack/#{os_release}"
openstack = Object.const_get(os_release.capitalize).new

rows = []

openstack.images_query.each do |row|

  # Get some extra data about the image
  base_image_ref = nil
  is_snapshot = 'No'
  openstack.image_properties_query(row[':id']).each do |image_row|
    case image_row[:name]
    when 'image_location'
      if image_row[:value] == 'snapshot'
        is_snapshot = 'Yes'
      end
    when 'base_image_ref'
      base_image_ref = image_row[:value]
    end
  end

  # Shorten the Instance ID
  images_id_short = row[:id].split('-')[0]

  # Yes/no for public
  if row[:is_public] == "1"
    is_public = 'Yes'
  else
    is_public = 'No'
  end

  # Size in GB
  size = sprintf("%.2f", (row[:size].to_i / 1024 / 1024 / 1024.0))

  # Get the base image
  if base_image_ref
    base_image_name = openstack.image_properties_query(base_image_ref).first[:name]
  else
    base_image_name = nil
  end

  # Build the output row
  rows << [images_id_short, row[:image_name], row[:tenant_name], is_snapshot, base_image_name, size, is_public]
end

# Print report
headings = ['ID', 'Name', 'Owner', 'Snapshot', 'Base Image', 'Size (GB)', 'Public']

table = Terminal::Table.new :headings => headings, :rows => rows
puts table

