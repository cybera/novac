#!/usr/bin/env ruby
# Usage: novac quota-report [projectID]
# Summary: Displays the Quota and Usage for every project or a sepcified project
# Help: Optional argument: <projectID> may be specified for just one project.

$:.unshift File.expand_path("../../share/novac/lib/rb", __FILE__)
require 'rubygems'
require 'terminal-table'
require 'novadb2'
require 'helpers/quotas'
require 'helpers/projects'
require 'pp'

# Ensure root or sudo is used for this command
if Process.euid != 0
  throw "Must run this script as root or sudo."
end

# Was a project specified?
if ARGV[0]
  project = ARGV[0]
else
  project = nil
end

# create quota object
quotas = Quotas.new

# Build a list of project quotas
projects = Projects.new

# Get the quota for each project
# As well as resources used
quota = {}
resources_used = {}
to_report = {}
total_usage = {}

if project
  p = projects.fuzzy_search(project)
  project_id = p.keys[0]
  project_name = p.values[0]
  total_usage[project_id] = quotas.get_project_usage(project_id)
  to_report[project_id] = project_name
  quota[project_id] = quotas.project_quota_with_defaults(project_id)
else
  total_usage = quotas.all_projects_used
  projects.projects.each do |project_id, project_name|
    to_report[project_id] = project_name
    quota[project_id] = quotas.project_quota_with_defaults(project_id)
  end
end

# Load start dates into memory
start_dates = {}

File.open("/etc/openstack-dashboard/start-dates.txt", "r") do |file|
  while (line = file.gets)
    if line != ""
      foo = line.split(":")
      start_dates[foo[0]] = foo[1]
    end
  end
end

# Report quota usage
sorted_projects = to_report.sort_by { |k,v| v }
sorted_projects.each do |project_id, project_name|
  rows = []
  q = quota[project_id].sort_by { |k,v| k }
  q.each do |resource, limit|
    used = 0
    if total_usage[project_id]['global'].key?(resource.to_sym)
      used = total_usage[project_id]['global'][resource.to_sym]
    end
    total_usage[project_id]['users'].each do |user, user_quota_info|
      if total_usage[project_id]['users'][user].key?(resource.to_sym)
        used += total_usage[project_id]['users'][user][resource.to_sym]
      end
    end
    # Catch 0 or unlimited quota users
    if limit.to_f > 0.0
      percent = ((used.to_f / limit.to_f) * 100).to_i
    else
      percent = 0
    end
    rows << [resource,used,limit,"#{percent} %"]
  end
  next unless rows.any?

  start_date = start_dates[project_id]
  # Just in case - truncate Project Name to < 80 characters (:width)
  project_name = "#{project_name[0..60]}\n#{start_date}"
  table = Terminal::Table.new :title => project_name, :headings => ['Resource', 'Used', 'Limit',''], :rows => rows, :style => { :width => 80 }
  table.align_column(-1, :right)
  table.align_column(-2, :right)
  table.align_column(-3, :right)

  puts table
end
