#!/usr/bin/env ruby

# Usage: novac list-instances
# Summary: List all instances on both regions
# Help: This command shows the ID, Project, State, User, Region, Name, Host, IPv4, Flavor, Key, and Image


$:.unshift File.expand_path("../../share/novac/lib/rb", __FILE__)
require 'rubygems'
require 'terminal-table'
require 'novadb2'
require 'helpers/projects'

# Ensure root or sudo is used for this command
if Process.euid != 0
  throw "Must run this script as root or use sudo."
end

novadb = NovaDB2.instance

# Get the OpenStack Query Library
os_release = novadb.get_openstack_release
require "openstack/#{os_release}"
openstack = Object.const_get(os_release.capitalize).new

projects = Projects.new.projects
rows = []

novadb.regions.each do |region|
  begin
    instances = openstack.instances_query(region)
    instances.each do |row|

      # Shorten the Instance ID
      instance_id_short = row[:uuid].split('-')[0]

      # Shorten the host
      host_short = row[:host].split('.')[0]

      # Get user name
      user = openstack.user_by_id(row[:user_id])[:name]

      # Project name
      project = projects[row[:project_id]]

      # Image name
      image = openstack.image_by_id(row[:image_ref])[:name]

      # ec2 id
      ec2_id = openstack.ec2_query(row[:uuid], region).to_s(base=16).rjust(8, '0')

      # Build the output row
      rows << [instance_id_short, project, user, region, row[:hostname], ec2_id, host_short, row[:fixed_ip], row[:floating_ip], row[:vm_state], row[:flavor], row[:key_name], image]
    end
  end
end

# Print report
headings = ['ID', 'Project', 'User', 'Region', 'Instance', 'EC2 ID', 'Host', 'Fixed IP', 'Floating IP', 'VM State', 'Flavor', 'Key', 'Image']

table = Terminal::Table.new :headings => headings, :rows => rows
puts table

